
Epoch      = 0 of 40000, Loss = 398.689, O/T = 334.475/64.214, Terminating when < 1.000
Patterns   =     1/ 1000, breakdown = 0/252 0.0% 0/264 0.0% 1/242 0.4% 0/242 0.0%
    Loss   =     334.475, breakdown = 84.632 85.840 79.351 84.652
Transforms =     5/ 1000, breakdown = 0/343 0.0% 3/378 0.8% 2/362 0.6% 0/391 0.0% (sz, rt, sh, no)
    Loss   =      64.214
2x2        =    39/ 1000, breakdown = 10/252 4.0% 11/264 4.2% 7/242 2.9% 11/242 4.5%
    Loss   =     394.291, breakdown = 85.231 97.245 99.911 111.904
2x3        =     5/  100
    Loss   =      29.920
3x3        =     2/  100
    Loss   =      16.907
Elapsed time = 00:00:00s, Average time per epoch = 0.000ms
Total elapsed time = 00:00:00s

Epoch      = 50 of 40000, Loss = 60.827, O/T = 50.183/10.644, Terminating when < 1.000
Patterns   =   554/ 1000, breakdown = 244/252 96.8% 164/264 62.1% 89/242 36.8% 57/242 23.6%
    Loss   =      50.183, breakdown = 2.849 10.259 15.572 21.503
Transforms =   301/ 1000, breakdown = 99/343 28.9% 94/378 24.9% 100/362 27.6% 101/391 25.8% (sz, rt, sh, no)
    Loss   =      10.644
2x2        =   785/ 1000, breakdown = 242/252 96.0% 206/264 78.0% 189/242 78.1% 148/242 61.2%
    Loss   =      43.325, breakdown = 3.697 9.030 12.833 17.765
2x3        =    72/  100
    Loss   =       4.067
3x3        =    69/  100
    Loss   =       2.370
Elapsed time = 00:01:52s, Average time per epoch = 2241.977ms
Total elapsed time = 00:01:56s

Epoch      = 100 of 40000, Loss = 48.520, O/T = 40.977/7.543, Terminating when < 1.000
Patterns   =   629/ 1000, breakdown = 241/252 95.6% 177/264 67.0% 130/242 53.7% 81/242 33.5%
    Loss   =      40.977, breakdown = 3.155 8.854 12.459 16.508
Transforms =   425/ 1000, breakdown = 115/343 33.5% 111/378 29.4% 123/362 34.0% 170/391 43.5% (sz, rt, sh, no)
    Loss   =       7.543
2x2        =   801/ 1000, breakdown = 240/252 95.2% 213/264 80.7% 191/242 78.9% 157/242 64.9%
    Loss   =      35.871, breakdown = 3.631 7.653 10.480 14.107
2x3        =    74/  100
    Loss   =       3.830
3x3        =    73/  100
    Loss   =       1.796
Elapsed time = 00:02:27s, Average time per epoch = 2955.109ms
Total elapsed time = 00:04:24s

Epoch      = 150 of 40000, Loss = 40.955, O/T = 36.161/4.794, Terminating when < 1.000
Patterns   =   673/ 1000, breakdown = 236/252 93.7% 182/264 68.9% 151/242 62.4% 104/242 43.0%
    Loss   =      36.161, breakdown = 3.914 8.432 10.586 13.230
Transforms =   579/ 1000, breakdown = 193/343 56.3% 147/378 38.9% 157/362 43.4% 244/391 62.4% (sz, rt, sh, no)
    Loss   =       4.794
2x2        =   794/ 1000, breakdown = 231/252 91.7% 217/264 82.2% 185/242 76.4% 161/242 66.5%
    Loss   =      33.299, breakdown = 4.278 7.543 9.585 11.894
2x3        =    70/  100
    Loss   =       4.221
3x3        =    70/  100
    Loss   =       1.473
Elapsed time = 00:02:10s, Average time per epoch = 2613.019ms
Total elapsed time = 00:06:35s

Epoch      = 200 of 40000, Loss = 36.421, O/T = 33.615/2.806, Terminating when < 1.000
Patterns   =   698/ 1000, breakdown = 223/252 88.5% 190/264 72.0% 162/242 66.9% 123/242 50.8%
    Loss   =      33.615, breakdown = 4.704 8.342 9.656 10.913
Transforms =   709/ 1000, breakdown = 268/343 78.1% 204/378 54.0% 219/362 60.5% 307/391 78.5% (sz, rt, sh, no)
    Loss   =       2.806
2x2        =   789/ 1000, breakdown = 222/252 88.1% 218/264 82.6% 188/242 77.7% 161/242 66.5%
    Loss   =      33.624, breakdown = 4.972 7.994 9.713 10.945
2x3        =    62/  100
    Loss   =       4.991
3x3        =    68/  100
    Loss   =       1.642
Elapsed time = 00:02:06s, Average time per epoch = 2531.797ms
Total elapsed time = 00:08:41s

Elapsed time 00:09:49 seconds
Failed to converge after 232 epochs.
Final error = 36.4211711475894.

<IPython.core.display.SVG object>
<IPython.core.display.SVG object>
Analogy    = [0.   0.   1.   0.   0.   0.   0.   0.   1.   0.86 0.   0.5  0.07 0.5
 0.5 ]
Target     = [0.   0.   1.   0.   0.   0.   0.   0.   0.14 0.86 0.  ]
Prediction = [0.   0.   1.   0.   0.   0.   0.06 0.06 0.21 0.85 0.06]
Error      = 0.008
Correct    = True

<IPython.core.display.SVG object>
<IPython.core.display.SVG object>
Analogy    = [0.   0.   0.   0.   0.   1.   0.75 0.67 0.43 0.   0.33 0.5  0.36 0.57
 0.83]
Target     = [0.   0.   0.   0.   0.   1.   0.75 0.67 0.14 0.14 1.  ]
Prediction = [0.   0.   0.   0.   0.   1.   0.78 0.71 0.2  0.11 0.87]
Error      = 0.012
Correct    = True

<IPython.core.display.SVG object>
<IPython.core.display.SVG object>
Analogy    = [0.   0.   0.   0.   0.   1.   0.25 0.   0.14 1.   0.   0.5  0.57 0.07
 1.  ]
Target     = [0.   0.   0.   0.   0.   1.   0.25 0.   0.29 0.14 1.  ]
Prediction = [0.   0.   0.   0.   0.   1.   0.19 0.07 0.17 0.24 0.8 ]
Error      = 0.035
Correct    = True

<IPython.core.display.SVG object>
<IPython.core.display.SVG object>
Analogy    = [1.   0.   0.   0.   0.   0.   0.   0.   0.86 0.57 1.   0.5  0.5  0.5
 0.5 ]
Target     = [1.   0.   0.   0.   0.   0.   0.   0.   0.86 0.57 1.  ]
Prediction = [1.   0.   0.   0.   0.   0.   0.06 0.08 0.83 0.65 0.89]
Error      = 0.015
Correct    = True

<IPython.core.display.SVG object>
<IPython.core.display.SVG object>
Analogy    = [0.   0.   1.   0.   0.   0.   0.5  1.   0.71 0.86 0.   0.5  0.5  0.21
 1.  ]
Target     = [0.   0.   1.   0.   0.   0.   0.5  1.   0.71 0.29 1.  ]
Prediction = [0.   0.   1.   0.   0.   0.   0.46 0.89 0.74 0.24 0.86]
Error      = 0.017
Correct    = True

<IPython.core.display.SVG object>
<IPython.core.display.SVG object>
Analogy    = [0.   1.   0.   0.   0.   0.   0.75 0.67 0.14 0.29 0.67 0.5  0.64 0.64
 0.5 ]
Target     = [0.   1.   0.   0.   0.   0.   0.75 0.67 0.43 0.57 0.67]
Prediction = [0.   1.   0.   0.   0.   0.   0.77 0.72 0.28 0.39 0.8 ]
Error      = 0.039
Correct    = True

<IPython.core.display.SVG object>
<IPython.core.display.SVG object>
Analogy    = [0.   1.   0.   0.   0.   0.   0.75 0.   0.86 0.   0.67 0.5  0.5  0.5
 0.5 ]
Target     = [0.   1.   0.   0.   0.   0.   0.75 0.   0.86 0.   0.67]
Prediction = [0.   1.   0.   0.   0.   0.   0.77 0.08 0.82 0.09 0.75]
Error      = 0.012
Correct    = True

<IPython.core.display.SVG object>
<IPython.core.display.SVG object>
Analogy    = [0.   1.   0.   0.   0.   0.   0.75 0.67 0.29 0.   0.   0.5  0.79 0.79
 0.5 ]
Target     = [0.   1.   0.   0.   0.   0.   0.75 0.67 0.86 0.57 0.  ]
Prediction = [0.   1.   0.   0.   0.   0.   0.76 0.7  0.73 0.21 0.06]
Error      = 0.078
Correct    = True

<IPython.core.display.SVG object>
<IPython.core.display.SVG object>
Analogy    = [0.   1.   0.   0.   0.   0.   0.25 0.67 0.14 0.   0.   0.5  0.5  0.5
 0.5 ]
Target     = [0.   1.   0.   0.   0.   0.   0.25 0.67 0.14 0.   0.  ]
Prediction = [0.   1.   0.   0.   0.   0.   0.2  0.67 0.16 0.08 0.07]
Error      = 0.007
Correct    = True

<IPython.core.display.SVG object>
<IPython.core.display.SVG object>
Analogy    = [0.   0.   0.   1.   0.   0.   1.   1.   0.71 0.14 0.33 0.5  0.5  0.5
 0.5 ]
Target     = [0.   0.   0.   1.   0.   0.   1.   1.   0.71 0.14 0.33]
Prediction = [0.   0.   0.   1.   0.   0.   0.93 0.9  0.73 0.15 0.16]
Error      = 0.022
Correct    = True

